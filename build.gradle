buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'minerworks-webapp'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    springVersion = '5.0.8.RELEASE'
    springSecurityTestVersion = '5.0.7.RELEASE'
    springRestDocsVersion = '2.0.2.RELEASE'
    springAutoRestDocsVersion = '2.0.1'
    jerseyVersion = '2.27'
    gsonVersion = '2.8.5'
    jsonVersion = '20180813'
    postgresqlVersion = '42.2.5'
    projectLombokVersion = '1.18.2'
}

dependencies {

    compile(
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-thymeleaf',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-websocket',

            "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:$springBootVersion",
            "org.springframework:spring-messaging:$springVersion",

            "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion",
            "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion",
            "org.glassfish.jersey.media:jersey-media-json-processing:$jerseyVersion",
            "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion",
            "org.glassfish.jersey.media:jersey-media-sse:$jerseyVersion",

            "com.google.code.gson:gson:$gsonVersion",
            "org.json:json:$jsonVersion",
            "org.postgresql:postgresql:$postgresqlVersion",
            "org.projectlombok:lombok:$projectLombokVersion"
    )

    testCompile(
            'org.springframework.boot:spring-boot-starter-test',

            "org.springframework.security:spring-security-test:$springSecurityTestVersion",
            "org.springframework.restdocs:spring-restdocs-mockmvc:$springRestDocsVersion",
            "capital.scalable:spring-auto-restdocs-core:$springAutoRestDocsVersion"
    )

}